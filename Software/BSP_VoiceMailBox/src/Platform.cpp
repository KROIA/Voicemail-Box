/**
 * @details 
 * In case this Project is ported to another STM controller, a new IOC configuration had to be done.
 * For example the GPIO for the leds and the buttons can be named differently in the CUBEMX.
 * In this case, change the initialisation of the arrays for the leds and buttons. 
 * The new macro names can be found in the main.h file, which is generated by the CUBEMX.
 * 
 * In the case that the BSP of the STM32 uP has changed, change the implementation functions below to stay compatible.
 */

#include "platform.hpp"
#include "HAL_abstraction.hpp"
#include <stdint.h>

#include <cstdarg>   // <-- required for va_list and related macros
#include <cstdio>    // <-- required for vsnprintf
#include <cstring>


namespace VoiceMailBox
{

	/*
		Fill in the GPIO_TypeDef* and pin values, generated from the CUBEMX for the LEDs
	*/
	DigitalPin Platform::led[] = {
		{ LED0_GPIO_Port, LED0_Pin },
		{ LED1_GPIO_Port, LED1_Pin }
	};

	/*
		Fill in the GPIO_TypeDef* and pin values, generated from the CUBEMX for the buttons
	*/
	DigitalPin Platform::button[] = {
		{ BTN0_GPIO_Port, BTN0_Pin },
		{ BTN1_GPIO_Port, BTN1_Pin },
		{ BTN2_GPIO_Port, BTN2_Pin },
		{ BTN3_GPIO_Port, BTN3_Pin }
	};


	/*
		Fill in the ADC_TypeDef* and channel values, generated from the CUBEMX for the ADC Potis
	*/
	AnalogPin Platform::adcPotis[] = {
		{ static_cast<VMB_ADC_Handle*>(getADC_POT0()) }, // maybe problematic because of static initialization order
		{ static_cast<VMB_ADC_Handle*>(getADC_POT1()) }
	};

	/*
		Fill in the UART_HandleTypeDef* value, generated from the CUBEMX for the UART
	*/
	UART Platform::dbgUart(getUART_DEBUG(), 256); // maybe problematic because of static initialisation order
	//UART Platform::wifiUart(getUART_WIFI(), 64); // maybe problematic because of static initialisation order


	// 0x18 is the default address for the TLV320AIC3104
	Codec_TLV320AIC3104 Platform::codec(getI2S_CODEC(), 512,
										getI2C_CODEC(), 0x18,  // maybe problematic because of static initialisation order
										CODEC_NRESET_GPIO_Port, CODEC_NRESET_Pin);

	ATCommandClient Platform::pmodESP(getUART_WIFI(), 256); // maybe problematic because of static initialisation order


#ifdef VMB_DEVELOPMENT_CONFIGURATION
	DigitalPin Platform::dbgPins[] =
	{
		{ DBG0_GPIO_Port, DBG0_Pin },
		{ DBG1_GPIO_Port, DBG1_Pin },
		{ DBG2_GPIO_Port, DBG2_Pin }
	};
#endif


	void Platform::setup()
	{
		VMB_HAL_InitTickCounter();


		dbgUart.setup();
		pmodESP.setup();
		//wifiUart.setup();

		codec.setup();
	}	
}






