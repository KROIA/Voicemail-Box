#include "Example_AnalogPin.hpp"
#include "BSP_VoiceMailBox.hpp"
#include "main.h"

namespace Example_AnalogPin
{
	/**
	 * @brief Example on how to use the built-in potentiometer on the Voice Mail Box.
	 * @details 
	 * This example reads the value of one built-in potentiometer and prints it to the serial monitor.
	 */
	void setup_UseBuiltinPotentiometer();
	void loop_UseBuiltinPotentiometer();

	/**
	 * @brief Example on how to use a custom potentiometer.
	 * @details
	 * This example creates a custom potentiometer.
	 * It reads the value of a custom potentiometer and prints it to the serial monitor.
	 * For simplicity it uses the same potentiometer pin as the built-in potentiometer.
	 * But it can by any other analog input pin.
	 */
	void setup_UseCustomPotentiometer();
	void loop_UseCustomPotentiometer();
	






// ------------------------------------------------------------------------------------------------
// ================================================================================================
// ------------------------------------------------------------------------------------------------
	void setup()
	{
		// Select one of the examples to run, comment out the others
		setup_UseBuiltinPotentiometer();
		// setup_UseCustomPotentiometer();
	}

	void loop()
	{
		// Select one of the examples to run, comment out the others (dont mix them with the setup)
		loop_UseBuiltinPotentiometer();
		// loop_UseCustomPotentiometer();
	}






// ------------------------------------------------------------------------------------------------
// ================================================================================================
// ------------------------------------------------------------------------------------------------
	void setup_UseBuiltinPotentiometer()
	{
		VoiceMailBox::setup();
		// Nothing to setup here
	}
	void loop_UseBuiltinPotentiometer()
	{
		using namespace VoiceMailBox;
		VoiceMailBox::update();

		AnalogPin& potentiometer_0 = getPotentiometer(Potentiometer::POT0);
		println("Potentiometer 0: %d", potentiometer_0.getValue());
		delay(100);
	}






// ------------------------------------------------------------------------------------------------
// ================================================================================================
// ------------------------------------------------------------------------------------------------
	VoiceMailBox::AnalogPin* customPotentiometer = nullptr;

	void setup_UseCustomPotentiometer()
	{
		VoiceMailBox::setup();
		// Instantiate the custom potentiometer.
		// It needs the ADC handle which is generated by the CUBE MX and will be available in the main.c
		// To access the ADC handle, a get function needs to be created in the main.h and main.c files 
		// that return the pointer to the handle.
		customPotentiometer = new VoiceMailBox::AnalogPin(getADC_POT0());
	}
	void loop_UseCustomPotentiometer()
	{
		using namespace VoiceMailBox;
		VoiceMailBox::update();

		println("Potentiometer 0: %d", customPotentiometer->getValue());
		delay(100);
	}
} 
